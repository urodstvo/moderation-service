name: moderation-v2
services:
  proxy:
    image: nginx:latest
    volumes:
      - ./nginx.stack.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - task-agregator
      - authorization
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - moderation-net

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - moderation-net

  minio:
    image: minio/minio
    command: server --address ":9000" --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - moderation-net

  nats:
    restart: always
    image: nats:latest
    container_name: nats
    command: -js -m 8222
    networks:
      - moderation-net

  authorization:
    container_name: authorization
    image: urodstvo/moderation-service-v2:authorization
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - moderation-net

  task-agregator:
    container_name: task-agregator
    image: urodstvo/moderation-service-v2:task
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - moderation-net

  result-agregator:
    container_name: result-agregator
    image: urodstvo/moderation-service-v2:result
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - moderation-net

  moderation:
    container_name: moderation
    image: urodstvo/moderation-service-v2:moderation
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      nats:
        condition: service_started
    networks:
      - moderation-net

  test-webhook:
    container_name: test-webhook
    image: urodstvo/moderation-service-v2:test
    env_file: ".env"
    networks:
      - moderation-net

  migrations:
    container_name: migrations
    image: urodstvo/moderation-service-v2:migrations
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - moderation-net

  web:
    container_name: web
    image: urodstvo/moderation-service-v2:web
    env_file: ".env"
    networks:
      - moderation-net

volumes:
  redis_data:
  postgres_data:
  minio_data:
  minio-config:

networks:
  moderation-net:
    driver: bridge
