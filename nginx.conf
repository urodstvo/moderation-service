worker_processes auto;

events {
    worker_connections 2000;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    server_tokens off;

    # Логирование запросов
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Ограничение размера загружаемых файлов (100MB)
    client_max_body_size 100M;

    upstream task_aggregator {
        server task-aggregator:8000; 
    }

    upstream authorization {
        server authorization:8000;
    }

    upstream adminer {
        server adminer:8080;
    }

    upstream minio {
        server minio:9000;
    }

    server {
        listen 80;
        server_name adminer.example.com;

        location / {
            proxy_pass http://adminer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name s3.example.com;

        location / {
            proxy_pass http://minio/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name _;

        # API (Auth)
        location /auth/ {
            proxy_pass http://authorization/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API (Task Aggregator)
        location /api/v2/ {
            proxy_pass http://task_aggregator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Заглушка для неизвестных маршрутов
        location / {
            return 404;
        }
    }
}
